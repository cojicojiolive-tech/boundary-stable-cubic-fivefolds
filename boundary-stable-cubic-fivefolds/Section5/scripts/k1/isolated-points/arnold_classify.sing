// ============================================================
//  arnold_classify.sing  (generated by Macaulay2)
//  - For each projective isolated singular point of F
//  - Dehomogenize by setting (vChart = 1), translate to origin
//  - Use classify.lib to print type / mu / tau
// ============================================================

LIB "classify.lib";
proc safe_classify(poly f, string tag) {
  int mu = milnor(f);
  int tau = tjurina(f);
  list L = classify(f);
  if (size(L) > 0) {
    string typ = string(L[1]);
    print(tag + ": type=" + typ + ", mu=" + string(mu) + ", tau=" + string(tau));
  } else {
    print(tag + ": classify() returned empty (mu=" + string(mu) + ", tau=" + string(tau) + ")");
  }
}

// ========== projective point #0 ==========
ring R0 = 0,(x1,x2,x3,x4,x5,x6),ds;
poly F = x2*x3^2+x1*x3*x4+x2^2*x5+x1^2*x6+x5^2+x4*x6;
poly f0 = F;
safe_classify(f0, "Point 0");

quit;
